.page {
  min-height: 100vh;
  background: linear-gradient(135deg, var(--off-white) 0%, var(--gray-100) 100%);
  padding: 2rem;
}

.main {
  max-width: 1200px;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* Login Form Styles */
.loginContainer {
  width: 100%;
  max-width: 400px;
  margin: 4rem auto;
  padding: 2rem;
  background: var(--white);
  border-radius: 1rem;
  box-shadow: var(--shadow-lg);
  text-align: center;
}

.loginForm {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.loginForm input {
  width: 100%;
  padding: 0.75rem;
  border: 2px solid var(--gray-200);
  border-radius: 0.5rem;
  transition: var(--transition-all);
  font-size: 1rem;
}

.loginForm input:focus {
  border-color: var(--primary-blue);
  outline: none;
  box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
}

/* Task Form Styles */
.taskForm {
  background: var(--white);
  border-radius: 16px;
  box-shadow: var(--shadow-lg);
  padding: 2rem;
  margin-bottom: 2rem;
  max-width: 800px;
  width: 100%;
}

.taskForm h2 {
  color: var(--gray-700);
  font-weight: 600;
  margin-bottom: 1.5rem;
}

.formGroup {
  display: grid;
  gap: 1.5rem;
}

.formGroup input,
.formGroup textarea,
.formGroup select {
  width: 100%;
  padding: 0.75rem 1rem;
  border: 2px solid var(--gray-200);
  border-radius: 8px;
  font-size: 0.95rem;
  transition: all 0.2s ease;
  background-color: var(--gray-50);
}

.formGroup input:focus,
.formGroup textarea:focus,
.formGroup select:focus {
  border-color: var(--primary-blue);
  outline: none;
  box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
}

.durationInputs {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 1rem;
}

/* Checkbox and Radio Styles */
.checkbox {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  cursor: pointer;
}

.checkbox input[type="checkbox"] {
  appearance: none;
  width: 1.2rem;
  height: 1.2rem;
  border: 2px solid var(--gray-300);
  border-radius: 0.3rem;
  transition: var(--transition-all);
  position: relative;
}

.checkbox input[type="checkbox"]:checked {
  background-color: var(--primary-blue);
  border-color: var(--primary-blue);
}

.checkbox input[type="checkbox"]:checked::after {
  content: "âœ“";
  color: white;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 0.8rem;
}

/* Button Styles */
.button {
  padding: 0.75rem 1.5rem;
  border-radius: 8px;
  font-weight: 500;
  font-size: 0.95rem;
  transition: var(--transition-all);
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
}

.button.primary {
  background: var(--primary-blue);
  color: var(--white);
  border: none;
}

.button.primary:hover {
  background: var(--primary-dark);
}

.button.secondary {
  background: var(--white);
  color: var(--primary-blue);
  border: 2px solid var(--primary-blue);
}

.button.secondary:hover {
  background: var(--gray-50);
}

/* Task List Styles */
.taskList {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
  gap: 1.5rem;
  width: 100%;
  padding: 1rem;
}

.taskItem {
  background: var(--white);
  border-radius: 12px;
  border: 1px solid var(--gray-200);
  box-shadow: var(--shadow-sm);
  transition: all 0.3s ease;
  overflow: hidden;
}

.taskItem:hover {
  transform: translateY(-5px);
  box-shadow: 0 10px 20px rgba(37, 99, 235, 0.1);
  border-color: var(--primary-light);
}

.taskHeader {
  background: var(--primary-blue);
  color: var(--white);
  padding: 1rem 1.5rem;
  border-bottom: 1px solid var(--gray-200);
}

.taskHeader h3 {
  color: var(--white);
  font-weight: 600;
  font-size: 1.1rem;
  margin: 0;
}

.taskContent {
  padding: 1.5rem;
}

.taskInfo {
  margin-bottom: 1rem;
}

.taskInfo p {
  color: var(--gray-600);
  font-size: 0.95rem;
  margin-bottom: 0.75rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.taskLabel {
  font-weight: 500;
  color: var(--gray-700);
  min-width: 80px;
}

.taskButtons {
  display: flex;
  gap: 0.75rem;
  padding-top: 1rem;
  border-top: 1px solid var(--gray-200);
}

/* Context Input Styles */
.contextInput {
  background: var(--white);
  border-radius: 16px;
  box-shadow: var(--shadow-lg);
  padding: 2rem;
  margin-bottom: 2rem;
  max-width: 800px;
  width: 100%;
}

.contextInput h2 {
  color: var(--gray-700);
  font-weight: 600;
  margin-bottom: 1rem;
}

.contextInput textarea {
  width: 100%;
  min-height: 120px;
  padding: 1rem;
  border: 2px solid var(--gray-200);
  border-radius: 8px;
  background-color: var(--gray-50);
  font-size: 0.95rem;
  transition: var(--transition-all);
  margin-bottom: 1rem;
}

.contextInput textarea:focus {
  border-color: var(--primary-blue);
  outline: none;
  box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
}

/* Recommendation Styles */
.recommendation {
  background: var(--white);
  border-radius: 16px;
  box-shadow: var(--shadow-lg);
  padding: 2rem;
  margin-bottom: 2rem;
  max-width: 800px;
  width: 100%;
  border-left: 4px solid var(--primary-blue);
}

.recommendation h2 {
  color: var(--gray-700);
  font-weight: 600;
  margin-bottom: 1rem;
}

.recommendationContent {
  background: var(--gray-50);
  padding: 1.5rem;
  border-radius: 8px;
  color: var(--gray-700);
  font-size: 0.95rem;
  line-height: 1.6;
}

/* Header Styles */
.header {
  width: 100%;
  max-width: 800px;
  background: var(--white);
  border-radius: 16px;
  padding: 1.5rem 2rem;
  margin-bottom: 2rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  box-shadow: var(--shadow-md);
}

.header h1 {
  color: var(--primary-blue);
  font-weight: 700;
  font-size: 1.75rem;
  margin: 0;
}

.userInfo {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.userInfo span {
  color: var(--gray-600);
  font-size: 0.95rem;
}

/* Responsive Design */
@media (max-width: 1200px) {
  .taskList {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (max-width: 768px) {
  .page {
    padding: 1rem;
  }

  .header {
    flex-direction: column;
    text-align: center;
    gap: 1rem;
    padding: 1rem;
  }

  .userInfo {
    flex-direction: column;
  }

  .taskList {
    grid-template-columns: 1fr;
    padding: 0.5rem;
  }

  .durationInputs {
    grid-template-columns: 1fr;
  }

  .taskButtons {
    flex-direction: column;
  }

  .contextInput,
  .taskForm,
  .recommendation {
    padding: 1rem;
  }
}

@media (max-width: 480px) {
  .header h1 {
    font-size: 1.5rem;
  }

  .button {
    width: 100%;
    padding: 0.5rem 1rem;
  }

  .taskItem {
    padding: 1rem;
  }
}

/* Add these styles to your existing CSS */
.dateInput {
  position: relative;
  width: 100%;
}

.dateInput input[type="date"] {
  width: 100%;
  padding: 0.75rem 1rem;
  border: 2px solid var(--gray-200);
  border-radius: 8px;
  font-size: 0.95rem;
  background-color: var(--gray-50);
  cursor: pointer;
  color: var(--gray-700);
  transition: var(--transition-all);
}

/* Hide default placeholder when empty */
.dateInput input[type="date"]:empty {
  color: transparent;
}

/* Show custom placeholder when empty */
.dateInput input[type="date"]:empty::before {
  content: "Set Deadline";
  color: var(--gray-400);
}

/* Show the date when selected */
.dateInput input[type="date"]:valid {
  color: var(--gray-700);
}

.dateInput input[type="date"]::-webkit-calendar-picker-indicator {
  cursor: pointer;
  opacity: 0.6;
  transition: var(--transition-all);
}

.dateInput input[type="date"]:hover::-webkit-calendar-picker-indicator {
  opacity: 1;
}

.dateInput input[type="date"]:focus {
  border-color: var(--primary-blue);
  outline: none;
  box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
}

/* Remove the absolute positioning of the placeholder */
.dateInput::before {
  content: '';  /* Remove the content */
}
